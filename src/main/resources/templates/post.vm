#include("/module/post-header.vm")
<div class="container">
    <div class="row">
        <div class="col-lg-12 post">
            <div class="editormd-preview" style="display: block; width: 100%; height: 100%;">
            <div class="markdown-body editormd-preview-container" previewcontainer="true" style="padding: 20px;"><h4 id="h4--mybatis-"><a name="为什么使用Mybatis？" class="reference-link"></a><span class="header-link octicon octicon-link"></span>为什么使用Mybatis？</h4><blockquote>
                <p>Mybatis是目前很火的SSM框架中的ORM组件，相比Hibernate更加灵活小巧，学习成本也更低，我觉得可维护性也更好些。</p>
            </blockquote>
                <p>但是spring boot官方更只提供了自家的spring data jpa及hibernate的整合方案，而没有给出Mybatis的整合组件。于是上Github，发现了Mybatis提供了它的spring-boot-starter。</p>
                <h2 id="h2-u6574u5408u65B9u6CD5"><a name="整合方法" class="reference-link"></a><span class="header-link octicon octicon-link"></span>整合方法</h2><ol>
                    <li><h4 id="h4-gradle-"><a name="gradle中加入依赖" class="reference-link"></a><span class="header-link octicon octicon-link"></span>gradle中加入依赖</h4><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code class="lang-groovy"><span class="pln">compile</span><span class="pun">(</span><span class="str">"org.mybatis.spring.boot:mybatis-spring-boot-starter:1.1.1"</span><span class="pun">)</span></code></li></ol></pre>
                        <h6 id="h6-spring-boot-mybatis-spring-boot-starter-mybatis-mybatis-spring-"><a name="spring.boot:mybatis-spring-boot-starter中已经包含了对mybatis和mybatis-spring的依赖" class="reference-link"></a><span class="header-link octicon octicon-link"></span>spring.boot:mybatis-spring-boot-starter中已经包含了对mybatis和mybatis-spring的依赖</h6></li><li><h4 id="h4--application-yml-mybatis"><a name="在application.yml中配置mybatis" class="reference-link"></a><span class="header-link octicon octicon-link"></span>在application.yml中配置mybatis</h4><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code><span class="pln">mybatis</span><span class="pun">:</span></code></li><li class="L1"><code><span class="pln"> </span><span class="com">#指定mapper和domain(实体)所在的包</span></code></li><li class="L2"><code><span class="pln"> type</span><span class="pun">-</span><span class="pln">aliases</span><span class="pun">-</span><span class="kwd">package</span><span class="pun">:</span><span class="pln"> me</span><span class="pun">.</span><span class="pln">jcala</span><span class="pun">.</span><span class="pln">blog</span><span class="pun">.</span><span class="pln">domain</span><span class="pun">,</span><span class="pln">me</span><span class="pun">.</span><span class="pln">jcala</span><span class="pun">.</span><span class="pln">blog</span><span class="pun">.</span><span class="pln">mapping</span></code></li><li class="L3"><code><span class="pln"> </span><span class="com">#指定使用的类型转换器</span></code></li><li class="L4"><code><span class="pln"> type</span><span class="pun">-</span><span class="pln">handlers</span><span class="pun">-</span><span class="kwd">package</span><span class="pun">:</span><span class="pln"> org</span><span class="pun">.</span><span class="pln">apache</span><span class="pun">.</span><span class="pln">ibatis</span><span class="pun">.</span><span class="pln">type</span><span class="pun">.</span><span class="typ">LocalDateTypeHandler</span></code></li></ol></pre><p>除此之外mybatis还提供了一下配置</p>
                    <pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code><span class="pln">mybatis</span><span class="pun">:</span></code></li><li class="L1"><code><span class="pln"> config</span><span class="pun">-</span><span class="pln">location</span><span class="pun">:</span><span class="pln">    </span><span class="com">#mybatis的xml注册文件位置</span></code></li><li class="L2"><code><span class="pln"> mapper</span><span class="pun">-</span><span class="pln">locations</span><span class="pun">:</span><span class="pln">   </span><span class="com">#Mapper xml config files (optional)</span></code></li><li class="L3"><code><span class="pln"> executor</span><span class="pun">-</span><span class="pln">type</span><span class="pun">:</span><span class="pln">      </span><span class="com">#执行类型为: SIMPLE, REUSE还是BATCH</span></code></li><li class="L4"><code><span class="pln"> configuration</span><span class="pun">:</span><span class="pln">      </span><span class="com">#mybatis的其他配置</span></code></li></ol></pre></li><li><h4 id="h4--spring-boot-datasource"><a name="在Spring Boot中配置好数据源DataSource" class="reference-link"></a><span class="header-link octicon octicon-link"></span>在Spring Boot中配置好数据源DataSource</h4>可以使用任意数据源，mybatis会自动使用spring boot中所配置的数据库连接池</li></ol>
                <p>以上就完成了spring boot对mybatis的整合，超级简单啊</p>
                <h2 id="h2-u6D4Bu8BD5u4E00u4E0B"><a name="测试一下" class="reference-link"></a><span class="header-link octicon octicon-link"></span>测试一下</h2><p>因为在type-aliases-package: me.jcala.blog.domain,me.jcala.blog.mapping中指定的mapping扫描包为me.jcala.blog.mapping，所以要把写的mapper放到me.jcala.blog.mapping包下。</p>
                <h4 id="h4--me-jcala-blog-mapping-testmapper-"><a name="在me.jcala.blog.mapping下新建一个TestMapper接口" class="reference-link"></a><span class="header-link octicon octicon-link"></span>在me.jcala.blog.mapping下新建一个TestMapper接口</h4><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code class="lang-java"><span class="lit">@Repository</span></code></li><li class="L1"><code class="lang-java"><span class="lit">@Mapper</span></code></li><li class="L2"><code class="lang-java"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">interface</span><span class="pln"> </span><span class="typ">TestMapper</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L3"><code class="lang-java"><span class="pln">    </span><span class="lit">@Insert</span><span class="pun">(</span><span class="str">"insert into users set username='zzp',password='zzp105'"</span><span class="pun">)</span></code></li><li class="L4"><code class="lang-java"><span class="pln">    </span><span class="kwd">void</span><span class="pln"> insert</span><span class="pun">();</span></code></li><li class="L5"><code class="lang-java"><span class="pun">}</span></code></li></ol></pre>
                <h4 id="h4-u518Du968Fu4FBFu5199u4E00u4E2Au6D4Bu8BD5u7684u7C7B"><a name="再随便写一个测试的类" class="reference-link"></a><span class="header-link octicon octicon-link"></span>再随便写一个测试的类</h4><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">TestForMapper</span><span class="pun">{</span></code></li><li class="L1"><code><span class="lit">@Autowired</span></code></li><li class="L2"><code><span class="typ">TestMapper</span><span class="pln"> testMapper</span><span class="pun">;</span></code></li><li class="L3"><code><span class="lit">@Test</span></code></li><li class="L4"><code><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> testInsert</span><span class="pun">(){</span></code></li><li class="L5"><code><span class="pln">      testMapper</span><span class="pun">.</span><span class="pln">insert</span><span class="pun">();</span></code></li><li class="L6"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L7"><code><span class="pun">}</span></code></li></ol></pre><h4 id="h4--"><a name="查看结果，发现插入了一条数据" class="reference-link"></a><span class="header-link octicon octicon-link"></span>查看结果，发现插入了一条数据</h4><p><img src="http://upload-images.jianshu.io/upload_images/1628651-3450a24542b94f87.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1.png"></p>
            </div>
            </div>
        </div>
    </div>
</div>
#include("/module/footer.vm")
